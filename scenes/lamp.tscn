[gd_scene load_steps=9 format=2]

[ext_resource path="res://scenes/lamp.gd" type="Script" id=1]
[ext_resource path="res://scripts/wirable.gd" type="Script" id=2]

[sub_resource type="CapsuleMesh" id=1]

[sub_resource type="SpatialMaterial" id=2]
albedo_color = Color( 0.917647, 0.917647, 0.694118, 1 )
emission_enabled = true
emission = Color( 0.862745, 0.890196, 0.666667, 1 )
emission_energy = 0.31
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="SpatialMaterial" id=3]
flags_transparent = true
albedo_color = Color( 0.85098, 0.807843, 0.807843, 0.380392 )

[sub_resource type="CubeMesh" id=4]

[sub_resource type="BoxShape" id=5]

[sub_resource type="GDScript" id=6]
script/source = "extends CollisionShape

class_name Grabbable

var target_node = null;

var delta_orientation = Basis();
var delta_position = Vector3();
var is_grabbed := false
var parent_rigid_body: RigidBody

func _ready():
	parent_rigid_body = get_parent()
	if !(parent_rigid_body is RigidBody):
		print(\"Parent of Grabbable is not RigidBody, but should be\")
	
func grab_init(node):
	target_node = node;
	
	var node_basis = node.get_global_transform().basis;
	is_grabbed = true
	
	#delta_position = get_global_transform().origin - node.get_global_transform().origin;
	#delta_position = node_basis.xform_inv(delta_position);
	
#	delta_orientation = Basis(Vector3(1, 0, 0), deg2rad(40.0)) * Basis(Vector3(0, 0, 1), deg2rad(90.0));
	
func grab_release(node):
	is_grabbed = false
	pass;


func orientation_follow(state, current_basis : Basis, target_basis : Basis):
	var delta : Basis = target_basis * current_basis.inverse();
	
	var q = Quat(delta);
	var axis = Vector3(q.x, q.y, q.z);

	if (axis.length_squared() > 0.0001):  # bullet fuzzyzero() is < FLT_EPSILON (1E-5)
		axis = axis.normalized();
		var angle = 2.0 * acos(q.w);
		state.set_angular_velocity(axis * (angle / (state.get_step())));
	else:
		state.set_angular_velocity(Vector3(0,0,0));



func position_follow(state, current_position, target_position):
	var dir = target_position - current_position;
	state.set_linear_velocity(dir / state.get_step());
	

func _integrate_forces(state):
	if (!target_node): return;
	
	var target_basis =  target_node.get_global_transform().basis * delta_orientation;
	var target_position = target_node.get_global_transform().origin# + target_basis.xform(delta_position);
	position_follow(state, get_global_transform().origin, target_position);
	orientation_follow(state, get_global_transform().basis, target_basis);
	

"

[node name="Lamp" type="RigidBody"]
gravity_scale = 0.0
contacts_reported = 1
contact_monitor = true
script = ExtResource( 1 )
mini_size = Vector3( 0.15, 0.15, 0.15 )

[node name="Lamp" type="MeshInstance" parent="."]
transform = Transform( 0.05, 0, 0, 0, -2.18557e-09, -0.05, 0, 0.05, -2.18557e-09, 0, 0.194386, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 2 )

[node name="Lamp2" type="MeshInstance" parent="."]
transform = Transform( 0.06, 0, 0, 0, -2.62268e-09, -0.06, 0, 0.06, -2.62268e-09, -0.0110056, 0.200603, 0.173394 )
visible = false
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="LampHolder" type="MeshInstance" parent="."]
transform = Transform( 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0 )
mesh = SubResource( 4 )
material/0 = null

[node name="Grabbable" type="CollisionShape" parent="."]
transform = Transform( 0.1, 0, 0, 0, 0.189937, 0, 0, 0, 0.1, 0, 0.0868996, 0 )
shape = SubResource( 5 )
script = SubResource( 6 )

[node name="Wireable1" type="Area" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.132, 0.143, 0 )
script = ExtResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="Wireable1"]
transform = Transform( 0.03, 0, 0, 0, 0.03, 0, 0, 0, 0.03, 0, 0, 0 )
shape = SubResource( 5 )

[node name="Wireable2" type="Area" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.117, 0.143, 0 )
script = ExtResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="Wireable2"]
transform = Transform( 0.03, 0, 0, 0, 0.03, 0, 0, 0, 0.03, 0, 0, 0 )
shape = SubResource( 5 )
